rootProject.name = 'bio-postprocess-lis'

include ':bio-postprocess-lis-populate-gwasresult-markers',
    ':bio-postprocess-lis-populate-marker-linkagegrouppositions',
    ':bio-postprocess-lis-populate-qtl-genes',
    ':bio-postprocess-lis-populate-qtl-markers',
    ':bio-postprocess-lis-create-genefamilytally',
    ':bio-postprocess-lis-create-pathways',
    ':bio-postprocess-lis-populate-pangeneset-genes-proteins',
    ':bio-postprocess-lis-populate-protein-transcript-attributes',
    ':bio-postprocess-lis-remove-orphans',
    ':bio-postprocess-lis-create-intergenic-region-features'

project(':bio-postprocess-lis-populate-gwasresult-markers').projectDir            = new File(settingsDir, 'lis-populate-gwasresult-markers')
project(':bio-postprocess-lis-populate-marker-linkagegrouppositions').projectDir  = new File(settingsDir, 'lis-populate-marker-linkagegrouppositions')
project(':bio-postprocess-lis-populate-qtl-genes').projectDir                     = new File(settingsDir, 'lis-populate-qtl-genes')
project(':bio-postprocess-lis-populate-qtl-markers').projectDir                   = new File(settingsDir, 'lis-populate-qtl-markers')
project(':bio-postprocess-lis-create-genefamilytally').projectDir                 = new File(settingsDir, 'lis-create-genefamilytally')
project(':bio-postprocess-lis-create-pathways').projectDir                        = new File(settingsDir, 'lis-create-pathways')
project(':bio-postprocess-lis-populate-pangeneset-genes-proteins').projectDir     = new File(settingsDir, 'lis-populate-pangeneset-genes-proteins')
project(':bio-postprocess-lis-populate-protein-transcript-attributes').projectDir = new File(settingsDir, 'lis-populate-protein-transcript-attributes')
project(':bio-postprocess-lis-remove-orphans').projectDir                         = new File(settingsDir, 'lis-remove-orphans')
project(':bio-postprocess-lis-create-intergenic-region-features').projectDir      = new File(settingsDir, 'lis-create-intergenic-region-features')
